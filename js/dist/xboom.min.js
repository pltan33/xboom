// Templates
this["XBOOMTemplates"] = this["XBOOMTemplates"] || {};

this["XBOOMTemplates"]["js/src/settings/templates/SettingsTemplate.html"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<h1>Settings Template</h1>";
  });

var xboom = {
	Templates: XBOOMTemplates || {},
	Models: {},
	Collections: {},
	Views: {},
	Routers: {}
};


// Movies
xboom.Models.Movie = Backbone.Model.extend({

});
xboom.Collections.Movies = Backbone.Collection.extend({
    localStorage: new Backbone.LocalStorage('libMovies'),
    model: xboom.Models.Movie,
    parse: function() {
        return JSON.parse(localStorage.getItem('libMovies'));
    }
});
xboom.Views.MovieList = Backbone.View.extend({
    template: '#movieDetailsTemplate',
    initialize: function() {
        this.movieDetails = new xboom.Collections.Movies();
        this.listenTo(this.movieDetails, 'reset add destroy change', this.render);
        this.movieDetails.fetch({reset: true});
        this.render();
    },
    render: function() {
        var compile = Handlebars.compile($(this.template).html());
        _.forEach(this.movieDetails.models, function(m) {
            var data = m.toJSON();
            console.log('::render', data);
            this.$el.append(compile(data));
        },this);
        // var data = this.movieDetails.toJSON();
        return this;
    }
});






// Settings
xboom.Models.Settings = Backbone.Model.extend({
	localStorage: new Backbone.LocalStorage('settings'),
	parse: function(d) {
		d = JSON.parse(localStorage.getItem('settings'));
		return d;
	}
});
xboom.Views.Settings = Backbone.View.extend({
    initialize: function() {
        _.bindAll(this);

        this.model = new xboom.Models.Settings();
        this.model.fetch({
            success: this.render
        });
    },
    render: function() {
        console.log('::render', this.model);
    }
});
