this["XBOOMTemplates"] = this["XBOOMTemplates"] || {};

this["XBOOMTemplates"]["js/src/movies/templates/MovieInfoTemplate.html"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = "";
  buffer += "\n	<div class=\"cell genre\">\n		"
    + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))
    + "\n	</div>\n\n";
  return buffer;
  }

function program3(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n	<div class=\"cell cast\">\n		"
    + escapeExpression(((stack1 = depth0.name),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\n	</div>\n\n";
  return buffer;
  }

  buffer += "<!-- <div class=\"navbar\"><img src=\"img/logo.jpg\" width=\"40%\"></div> -->\n\n<div class=\"banner\">   \n    <!-- <div class=\"title\">";
  if (stack1 = helpers.label) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.label; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</div> -->\n    <img src=\"";
  if (stack1 = helpers.thumbnail) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.thumbnail; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "\" width=\"100%\">   \n</div>\n\n<div class=\"row row1\">\n	<div class=\"cell cell1\">\n        <div class=\"title\">";
  if (stack1 = helpers.label) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.label; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</div>\n    </div>\n    <div class=\"cell cell2\">\n        <div class=\"rating\">Ratings: 7</div>\n    </div>\n</div>\n\n<div class=\"row row2\" id=\"plot\">";
  if (stack1 = helpers.plot) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.plot; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</div>\n\n<div class =\"row row3\">Genre</div>\n\n<div class =\"row row4\">\n\n";
  stack1 = helpers.each.call(depth0, depth0.genre, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n\n<div class =\"row row5\">Cast</div>\n\n";
  stack1 = helpers.each.call(depth0, depth0.cast, {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n\n</div>";
  return buffer;
  });

this["XBOOMTemplates"]["js/src/movies/templates/MovieListTemplate.html"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n\n<div data-movieid=\"";
  if (stack1 = helpers.movieid) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.movieid; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "\" class=\"cell movie js-movie\">\n    <img src=\"";
  if (stack1 = helpers.thumbnail) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.thumbnail; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "\" width=\"100%\">\n<!--     <div class=\"title\">";
  if (stack1 = helpers.label) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.label; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</div> -->\n</div>\n\n";
  return buffer;
  }

  buffer += "<!-- <div class=\"navbar\">\n    <a href=\"\" class=\"js-settings\">\n        <img src=\"img/menu.png\" height=\"30px\">\n    </a>\n    <img src=\"img/logo.jpg\" height=\"30px\">\n</div> -->\n\n";
  stack1 = helpers.each.call(depth0, depth0.models, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n";
  return buffer;
  });

this["XBOOMTemplates"]["js/src/movies/templates/MovieTemplate.html"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<!-- <div class=\"navbar\">\n    <a href=\"\" class=\"js-back\">\n        <img src=\"img/menu.png\" height=\"30px\">\n    </a>\n    <img src=\"img/logo.jpg\" height=\"30px\">\n</div> -->\n\n<div class=\"banner\">   \n    <!-- <div class=\"title\">";
  if (stack1 = helpers.label) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.label; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</div> -->\n    <img src=\"";
  if (stack1 = helpers.thumbnail) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.thumbnail; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "\" width=\"100%\">   \n</div>\n\n<div class=\"row row1\">\n    <div class=\"cell cell1 js-play\">\n        <div class=\"value\"><img src=\"img/play.png\"></div>\n    </div>\n    <div class=\"cell cell2 js-info\">\n        <div class=\"value\"><img src=\"img/info.png\"></div>\n    </div>\n    <div class=\"cell cell3 js-remote\">\n        <div class=\"value\"><img src=\"img/trailer.png\"><a href=\"\"></a></div>\n    </div>\n</div>\n\n<!-- <div class=\"row row2\">\n    <div class=\"cell cell1\"><img src=\"img/trailer.png\"></div>\n    <div class=\"cell cell3\"><img src=\"img/play.png\"></div>\n</div> -->\n";
  return buffer;
  });

this["XBOOMTemplates"]["js/src/movies/templates/RemoteControlTemplate.html"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<div class=\"js-left\">\n	<img src=\"img/arrow_left.png\" height=\"50px\">\n</div>\n<div class=\"js-up\">\n	<img src=\"img/arrow_up.png\" height=\"50px\">\n</div>\n<div class=\"js-right\">\n	<img src=\"img/arrow_right.png\" height=\"50px\">\n</div>\n<div class=\"js-down\">\n	<img src=\"img/arrow_down.png\" height=\"50px\">\n</div>\n";
  });

this["XBOOMTemplates"]["js/src/settings/templates/SettingsTemplate.html"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<div class=\"navbar\">Settings</div>\n\n\n<label>Host/IP:</label><input type=\"text\" name=\"host\" value=\"";
  if (stack1 = helpers.host) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.host; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "\">\n<br>\n<label>Port:</label><input type=\"text\" name=\"port\" value=\"";
  if (stack1 = helpers.port) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.port; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "\">\n<br>\n<button class=\"js-save\">Save</button>\n<button class=\"js-cancel\">Cancel</button>";
  return buffer;
  });